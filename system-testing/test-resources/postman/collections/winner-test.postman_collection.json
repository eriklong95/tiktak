{
	"info": {
		"_postman_id": "1843af1d-e3b4-440a-a1f2-27842f980b20",
		"name": "winner-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25083019"
	},
	"item": [
		{
			"name": "create game",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const gameId = pm.response.json();",
							"pm.collectionVariables.set('gameId', gameId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"challenger\": \"me\",\n    \"opponent\": \"you\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games"
					]
				}
			},
			"response": []
		},
		{
			"name": "A's first move",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"x\": 0,\n    \"y\": 0,\n    \"occupier\": \"A\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/moves",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"moves"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "B's first move",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"x\": 0,\n    \"y\": 1,\n    \"occupier\": \"B\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/moves",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"moves"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "A's second move",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"x\": 1,\n    \"y\": 1,\n    \"occupier\": \"A\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/moves",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"moves"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get game undecided",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Game is not over', function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.equal('undecided');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/winner",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"winner"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "B's second move",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"x\": 0,\n    \"y\": 2,\n    \"occupier\": \"B\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/moves",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"moves"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "A's winning move",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"x\": 2,\n    \"y\": 2,\n    \"occupier\": \"A\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/moves",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"moves"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get winner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('A won the game', function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.equal('A');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/games/:gameId/winner",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"games",
						":gameId",
						"winner"
					],
					"variable": [
						{
							"key": "gameId",
							"value": "{{gameId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://0.0.0.0:1234",
			"type": "string"
		},
		{
			"key": "gameId",
			"value": "",
			"type": "string"
		}
	]
}